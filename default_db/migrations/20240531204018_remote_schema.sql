create table "public"."Profile" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "owner_id" bigint not null,
    "about_me" text default '"I''m secretive."'::text,
    "public" boolean default true
);


alter table "public"."Profile" enable row level security;

create table "public"."ProfileReactions" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "owner_id" text not null,
    "viewer_id" text not null
);


alter table "public"."ProfileReactions" enable row level security;

create table "public"."Reactions" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "like" boolean,
    "post_id" bigint,
    "user_id" bigint
);


alter table "public"."Reactions" enable row level security;

alter table "public"."Posts" drop column "dislikes";

alter table "public"."Posts" drop column "likes";

CREATE UNIQUE INDEX "ProfileReactions_pkey" ON public."ProfileReactions" USING btree (id);

CREATE UNIQUE INDEX "Profile_owner_id_key" ON public."Profile" USING btree (owner_id);

CREATE UNIQUE INDEX "Profile_pkey" ON public."Profile" USING btree (id);

CREATE UNIQUE INDEX reactions_pkey ON public."Reactions" USING btree (id);

CREATE UNIQUE INDEX reactions_post_id_key ON public."Reactions" USING btree (post_id, user_id);

alter table "public"."Profile" add constraint "Profile_pkey" PRIMARY KEY using index "Profile_pkey";

alter table "public"."ProfileReactions" add constraint "ProfileReactions_pkey" PRIMARY KEY using index "ProfileReactions_pkey";

alter table "public"."Reactions" add constraint "reactions_pkey" PRIMARY KEY using index "reactions_pkey";

alter table "public"."Profile" add constraint "Profile_owner_id_fkey" FOREIGN KEY (owner_id) REFERENCES "User"(id) not valid;

alter table "public"."Profile" validate constraint "Profile_owner_id_fkey";

alter table "public"."Profile" add constraint "Profile_owner_id_key" UNIQUE using index "Profile_owner_id_key";

alter table "public"."ProfileReactions" add constraint "ProfileReactions_owner_id_fkey" FOREIGN KEY (owner_id) REFERENCES "User"(username) not valid;

alter table "public"."ProfileReactions" validate constraint "ProfileReactions_owner_id_fkey";

alter table "public"."ProfileReactions" add constraint "ProfileReactions_viewer_id_fkey" FOREIGN KEY (viewer_id) REFERENCES "User"(username) not valid;

alter table "public"."ProfileReactions" validate constraint "ProfileReactions_viewer_id_fkey";

alter table "public"."Reactions" add constraint "reactions_post_id_fkey" FOREIGN KEY (post_id) REFERENCES "Posts"(post_id) ON DELETE CASCADE not valid;

alter table "public"."Reactions" validate constraint "reactions_post_id_fkey";

alter table "public"."Reactions" add constraint "reactions_post_id_key" UNIQUE using index "reactions_post_id_key";

alter table "public"."Reactions" add constraint "reactions_user_id_fkey" FOREIGN KEY (user_id) REFERENCES "User"(id) ON DELETE CASCADE not valid;

alter table "public"."Reactions" validate constraint "reactions_user_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.create_user_profile()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$ 
begin 
  insert into "Profile" (owner_id) 
  values (new.id); 
  return new; 
end; 
$function$
;

grant delete on table "public"."Profile" to "anon";

grant insert on table "public"."Profile" to "anon";

grant references on table "public"."Profile" to "anon";

grant select on table "public"."Profile" to "anon";

grant trigger on table "public"."Profile" to "anon";

grant truncate on table "public"."Profile" to "anon";

grant update on table "public"."Profile" to "anon";

grant delete on table "public"."Profile" to "authenticated";

grant insert on table "public"."Profile" to "authenticated";

grant references on table "public"."Profile" to "authenticated";

grant select on table "public"."Profile" to "authenticated";

grant trigger on table "public"."Profile" to "authenticated";

grant truncate on table "public"."Profile" to "authenticated";

grant update on table "public"."Profile" to "authenticated";

grant delete on table "public"."Profile" to "service_role";

grant insert on table "public"."Profile" to "service_role";

grant references on table "public"."Profile" to "service_role";

grant select on table "public"."Profile" to "service_role";

grant trigger on table "public"."Profile" to "service_role";

grant truncate on table "public"."Profile" to "service_role";

grant update on table "public"."Profile" to "service_role";

grant delete on table "public"."ProfileReactions" to "anon";

grant insert on table "public"."ProfileReactions" to "anon";

grant references on table "public"."ProfileReactions" to "anon";

grant select on table "public"."ProfileReactions" to "anon";

grant trigger on table "public"."ProfileReactions" to "anon";

grant truncate on table "public"."ProfileReactions" to "anon";

grant update on table "public"."ProfileReactions" to "anon";

grant delete on table "public"."ProfileReactions" to "authenticated";

grant insert on table "public"."ProfileReactions" to "authenticated";

grant references on table "public"."ProfileReactions" to "authenticated";

grant select on table "public"."ProfileReactions" to "authenticated";

grant trigger on table "public"."ProfileReactions" to "authenticated";

grant truncate on table "public"."ProfileReactions" to "authenticated";

grant update on table "public"."ProfileReactions" to "authenticated";

grant delete on table "public"."ProfileReactions" to "service_role";

grant insert on table "public"."ProfileReactions" to "service_role";

grant references on table "public"."ProfileReactions" to "service_role";

grant select on table "public"."ProfileReactions" to "service_role";

grant trigger on table "public"."ProfileReactions" to "service_role";

grant truncate on table "public"."ProfileReactions" to "service_role";

grant update on table "public"."ProfileReactions" to "service_role";

grant delete on table "public"."Reactions" to "anon";

grant insert on table "public"."Reactions" to "anon";

grant references on table "public"."Reactions" to "anon";

grant select on table "public"."Reactions" to "anon";

grant trigger on table "public"."Reactions" to "anon";

grant truncate on table "public"."Reactions" to "anon";

grant update on table "public"."Reactions" to "anon";

grant delete on table "public"."Reactions" to "authenticated";

grant insert on table "public"."Reactions" to "authenticated";

grant references on table "public"."Reactions" to "authenticated";

grant select on table "public"."Reactions" to "authenticated";

grant trigger on table "public"."Reactions" to "authenticated";

grant truncate on table "public"."Reactions" to "authenticated";

grant update on table "public"."Reactions" to "authenticated";

grant delete on table "public"."Reactions" to "service_role";

grant insert on table "public"."Reactions" to "service_role";

grant references on table "public"."Reactions" to "service_role";

grant select on table "public"."Reactions" to "service_role";

grant trigger on table "public"."Reactions" to "service_role";

grant truncate on table "public"."Reactions" to "service_role";

grant update on table "public"."Reactions" to "service_role";

CREATE TRIGGER after_user_create AFTER INSERT ON public."User" FOR EACH ROW EXECUTE FUNCTION create_user_profile();
ALTER TABLE "public"."User" DISABLE TRIGGER "after_user_create";

CREATE TRIGGER after_user_creation AFTER INSERT ON public."User" FOR EACH ROW EXECUTE FUNCTION create_user_profile();
ALTER TABLE "public"."User" DISABLE TRIGGER "after_user_creation";


